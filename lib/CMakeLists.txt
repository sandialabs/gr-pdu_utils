# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-pdu_utils
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX
list(APPEND pdu_utils_sources
    pdu_gmsk_fc_impl.cc
    pdu_burst_combiner_impl.cc
    pdu_fir_filter_impl.cc
    pdu_pfb_resamp_impl.cc
    #pdu_rational_resampler_cc_impl.cc
    message_counter_impl.cc
    message_gate_impl.cc
    message_emitter_impl.cc
    message_keep_1_in_n_impl.cc
    pdu_preamble_impl.cc
    pack_unpack_impl.cc
    extract_metadata_impl.cc
    upsample_impl.cc
    pdu_add_noise_impl.cc
    msg_drop_random_impl.cc
    pdu_head_tail_impl.cc
    tag_message_trigger_impl.cc
    pdu_length_filter_impl.cc
    pdu_logger_impl.cc
    pdu_clock_recovery_impl.cc
    pdu_align_impl.cc
    pdu_range_filter_impl.cc
    pdu_round_robin_impl.cc
    pdu_flow_ctrl_helper.cc
    pdu_binary_tools_impl.cc
    pdu_downsample_impl.cc
    pdu_fine_time_measure_impl.cc
    pdu_complex_to_mag2_impl.cc
    pdu_quadrature_demod_cf_impl.cc
    constants.cc
    pdu_rotate_impl.cc
    pdu_slice_impl.cc
    access_code_to_pdu_impl.cc
)

set(pdu_utils_sources "${pdu_utils_sources}" PARENT_SCOPE)
if(NOT pdu_utils_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT pdu_utils_sources)

add_library(gnuradio-pdu_utils SHARED ${pdu_utils_sources})
target_link_libraries(gnuradio-pdu_utils
	gnuradio::gnuradio-runtime
        gnuradio::gnuradio-filter
        gnuradio::gnuradio-blocks
        gnuradio::gnuradio-fft
	gnuradio::gnuradio-pmt
)
target_include_directories(gnuradio-pdu_utils
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-pdu_utils PROPERTIES DEFINE_SYMBOL "gnuradio_pdu_utils_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-pdu_utils PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-pdu_utils)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_pdu_utils_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-pdu_utils)

if(NOT test_pdu_utils_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_pdu_utils_sources)

foreach(qa_file ${test_pdu_utils_sources})
    GR_ADD_CPP_TEST("pdu_utils_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
